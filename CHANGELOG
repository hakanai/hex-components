
Version X.X (XXXX-XX-XX)

     New: HexViewer now contains its own scroll bar, rather than having you put it in a scroll pane.
          This is primarily so that painting the component is no longer constrained by Swing dimensions,
          meaning that much larger files can be viewed now.
     New: Filled in a lot of common keyboard shortcuts for the basic UI and their equivalents for Mac OS X.
     New: Errors reading from the binary now render as a red cross placeholder.

   Fixed: Fixed an issue where creating an annotation group larger than Integer.MAX_VALUE would overflow.
   Fixed: Fixed loading a file larger than Integer.MAX_VALUE using BinaryFactory. Larger files will now use
          a slower FileChannel approach instead of memory mapping.
   Fixed: HexViewer#setBytesPerRow() now calls invalidate, so that the GUI properly updates the layout.

 Changed: The code now requires Java 7 to run.
 Changed: When navigating to the top or bottom row, the view scrolls one line further, so that the border
          is visible.
 Changed: Unprintable ASCII characters are now a distinct kind of dot which users hopefully won't confuse
          for a normal period.
 Changed: setBinary() now sets an empty annotation collection as a side-effect, if the collection is null.
 Changed: The offset column is now rendered as wide as necessary to fit the largest offset.

Version 0.3 (2012-11-09)

 Changed: Separated the components usable in other apps into a reusable library, licenced under LGPL 3.
 Changed: Zero-width annotations removed as they were causing altogether too much trouble (e.g. when sorting a list
          of annotations, it's hard to know which one is first.)  The structure DSL is updated to not drop an
          array annotation in if the length would be zero, which was the common cause for it.

(Version 0.2 didn't really exist - this project was part of Hex at the time so the changelog can be found there.)
